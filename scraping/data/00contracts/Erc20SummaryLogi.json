[{"SourceCode":"pragma solidity \"0.4.20\";\r\n\r\ncontract Erc20 {\r\n    /** ERC20 Interface **\r\n    * Source: https://github.com/ethereum/EIPs/issues/20\r\n    * Downloaded: 2018.08.16\r\n    * Version without events and comments\r\n    * The full version can be downloaded at the source link\r\n    */\r\n\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    \r\n    function approve(address, uint256) public returns (bool _success);\r\n    function allowance(address, address) constant public returns (uint256 _remaining);\r\n    function balanceOf(address) constant public returns (uint256 _balance);\r\n    function totalSupply() constant public returns (uint256 _totalSupply);\r\n    function transfer(address, uint256) public returns (bool _success);\r\n    function transferFrom(address, address, uint256) public returns (bool _success);\r\n}\r\n\r\ncontract Erc20Test is Erc20 {\r\n    /** ERC20 Test Contract with dummy data **/\r\n\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n\r\n    function Erc20Test(string _name, string _symbol, uint8 _decimals) public {\r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimals = _decimals;\r\n    }\r\n    \r\n    function approve(address, uint256) public returns (bool) {return true;}\r\n    function allowance(address, address) constant public returns (uint256) {return 42;}\r\n    function balanceOf(address) constant public returns (uint256) {return 42;}\r\n    function totalSupply() constant public returns (uint256) {return 42;}\r\n    function transfer(address, uint256) public returns (bool) {return true;}\r\n    function transferFrom(address, address, uint256) public returns (bool) {return true;}\r\n}\r\n\r\ncontract Accessible {\r\n    /** Access Right Management **\r\n    * Copyright 2018\r\n    * Florian Weigand\r\n    * Synalytix UG, Munich\r\n    * florian(at)synalytix.de\r\n    * Created at: 2018.03.22\r\n    * Last modified at: 2018.09.17\r\n    */\r\n\r\n    // emergency stop\r\n    bool                                private stopped = false;\r\n    bool                                private accessForEverybody = false;\r\n    address                             public owner;\r\n    mapping(address => bool)            public accessAllowed;\r\n\r\n    function Accessible() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier ownership() {\r\n        require(owner == msg.sender);\r\n        _;\r\n    }\r\n\r\n    modifier accessible() {\r\n        require(accessAllowed[msg.sender] || accessForEverybody);\r\n        require(!stopped);\r\n        _;\r\n    }\r\n\r\n    function allowAccess(address _address) ownership public {\r\n        if (_address != address(0)) {\r\n            accessAllowed[_address] = true;\r\n        }\r\n    }\r\n\r\n    function denyAccess(address _address) ownership public {\r\n        if (_address != address(0)) {\r\n            accessAllowed[_address] = false;\r\n        }\r\n    }\r\n\r\n    function transferOwnership(address _address) ownership public {\r\n        if (_address != address(0)) {\r\n            owner = _address;\r\n        }\r\n    }\r\n\r\n    function toggleContractStopped() ownership public {\r\n        stopped = !stopped;\r\n    }\r\n\r\n    function toggleContractAccessForEverybody() ownership public {\r\n        accessForEverybody = !accessForEverybody;\r\n    }\r\n}\r\n\r\ncontract Erc20SummaryStorage is Accessible {\r\n    /** Data Storage Contract **\r\n    * Copyright 2018\r\n    * Florian Weigand\r\n    * Synalytix UG, Munich\r\n    * florian(at)synalytix.de\r\n    * Created at: 2018.08.02\r\n    * Last modified at: 2018.08.16\r\n    */\r\n       \r\n    /**** smart contract storage ****/\r\n    address[]                           public smartContracts;\r\n    mapping(address => bool)            public smartContractsAdded;\r\n    \r\n    /**** general storage of non-struct data which might \r\n    be needed for further development of main contract ****/\r\n    mapping(bytes32 => uint256)         public uIntStorage;\r\n    mapping(bytes32 => string)          public stringStorage;\r\n    mapping(bytes32 => address)         public addressStorage;\r\n    mapping(bytes32 => bytes)           public bytesStorage;\r\n    mapping(bytes32 => bool)            public boolStorage;\r\n    mapping(bytes32 => int256)          public intStorage;\r\n\r\n    /**** CRUD for smart contract storage ****/\r\n    function getSmartContractByPosition(uint position) external view returns (address) {\r\n        return smartContracts[position];\r\n    }\r\n\r\n    function getSmartContractsLength() external view returns (uint) {\r\n        return smartContracts.length;\r\n    }\r\n    \r\n    function addSmartContractByAddress(address _contractAddress) accessible external {           \r\n        // empty address not allow\r\n        require(_contractAddress != address(0));\r\n        // address was not added before\r\n        require(!smartContractsAdded[_contractAddress]);\r\n        \r\n        // add new address\r\n        smartContractsAdded[_contractAddress] = true;\r\n        smartContracts.push(_contractAddress);\r\n    }\r\n    \r\n    function removeSmartContractByAddress(address _contractAddress) accessible external {\r\n        uint256 endPointer = smartContracts.length;\r\n        uint256 startPointer = 0;\r\n        \r\n        while(endPointer > startPointer) {\r\n            // swap replace\r\n            if(smartContracts[startPointer] == _contractAddress) {              \r\n                // as long as the last element is target delete it before swap\r\n                while(smartContracts[endPointer - 1] == _contractAddress) {\r\n                    endPointer = endPointer - 1;\r\n                    // stop if no element left\r\n                    if(endPointer == 0) break;\r\n                }\r\n                \r\n                if(endPointer > startPointer) {\r\n                    smartContracts[startPointer] = smartContracts[endPointer - 1];\r\n                    endPointer = endPointer - 1;\r\n                }\r\n            }\r\n            startPointer = startPointer + 1;\r\n        }\r\n        smartContracts.length = endPointer;\r\n        // reset, so it can be added again\r\n        smartContractsAdded[_contractAddress] = false;\r\n    }\r\n\r\n    /**** Get Methods for additional storage ****/\r\n    function getAddress(bytes32 _key) external view returns (address) {\r\n        return addressStorage[_key];\r\n    }\r\n\r\n    function getUint(bytes32 _key) external view returns (uint) {\r\n        return uIntStorage[_key];\r\n    }\r\n\r\n    function getString(bytes32 _key) external view returns (string) {\r\n        return stringStorage[_key];\r\n    }\r\n\r\n    function getBytes(bytes32 _key) external view returns (bytes) {\r\n        return bytesStorage[_key];\r\n    }\r\n\r\n    function getBool(bytes32 _key) external view returns (bool) {\r\n        return boolStorage[_key];\r\n    }\r\n\r\n    function getInt(bytes32 _key) external view returns (int) {\r\n        return intStorage[_key];\r\n    }\r\n\r\n    /**** Set Methods for additional storage ****/\r\n    function setAddress(bytes32 _key, address _value) accessible external {\r\n        addressStorage[_key] = _value;\r\n    }\r\n\r\n    function setUint(bytes32 _key, uint _value) accessible external {\r\n        uIntStorage[_key] = _value;\r\n    }\r\n\r\n    function setString(bytes32 _key, string _value) accessible external {\r\n        stringStorage[_key] = _value;\r\n    }\r\n\r\n    function setBytes(bytes32 _key, bytes _value) accessible external {\r\n        bytesStorage[_key] = _value;\r\n    }\r\n    \r\n    function setBool(bytes32 _key, bool _value) accessible external {\r\n        boolStorage[_key] = _value;\r\n    }\r\n    \r\n    function setInt(bytes32 _key, int _value) accessible external {\r\n        intStorage[_key] = _value;\r\n    }\r\n\r\n    /**** Delete Methods for additional storage ****/\r\n    function deleteAddress(bytes32 _key) accessible external {\r\n        delete addressStorage[_key];\r\n    }\r\n\r\n    function deleteUint(bytes32 _key) accessible external {\r\n        delete uIntStorage[_key];\r\n    }\r\n\r\n    function deleteString(bytes32 _key) accessible external {\r\n        delete stringStorage[_key];\r\n    }\r\n\r\n    function deleteBytes(bytes32 _key) accessible external {\r\n        delete bytesStorage[_key];\r\n    }\r\n    \r\n    function deleteBool(bytes32 _key) accessible external {\r\n        delete boolStorage[_key];\r\n    }\r\n    \r\n    function deleteInt(bytes32 _key) accessible external {\r\n        delete intStorage[_key];\r\n    }\r\n}\r\n\r\ncontract Erc20SummaryLogic is Accessible {\r\n    /** Logic Contract (updatable) **\r\n    * Copyright 2018\r\n    * Florian Weigand\r\n    * Synalytix UG, Munich\r\n    * florian(at)synalytix.de\r\n    * Created at: 2018.08.02\r\n    * Last modified at: 2018.08.16\r\n    */\r\n\r\n    Erc20SummaryStorage erc20SummaryStorage;\r\n\r\n    function Erc20SummaryLogic(address _erc20SummaryStorage) public {\r\n        erc20SummaryStorage = Erc20SummaryStorage(_erc20SummaryStorage);\r\n    }\r\n\r\n    function addSmartContract(address _contractAddress) accessible public {\r\n        // TODO: sth like EIP-165 would be nice\r\n        // see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md\r\n        // require(erc20Contract.totalSupply.selector ^ erc20Contract.balanceOf.selector ^ erc20Contract.allowance.selector ^ erc20Contract.approve.selector ^ erc20Contract.transfer.selector ^ erc20Contract.transferFrom.selector);\r\n\r\n        // as EIP-165 is not available check for the most important functions of ERC20 to be implemented\r\n        Erc20 erc20Contract = Erc20(_contractAddress);\r\n        erc20Contract.name();\r\n        erc20Contract.symbol();\r\n        erc20Contract.decimals();\r\n        erc20Contract.totalSupply();\r\n        erc20Contract.balanceOf(0x281055Afc982d96fAB65b3a49cAc8b878184Cb16);\r\n\r\n        // if it did not crash (because of a missing function) it should be an ERC20 contract\r\n        erc20SummaryStorage.addSmartContractByAddress(_contractAddress);\r\n    }\r\n\r\n    function addSmartContracts(address[] _contractAddresses) accessible external {\r\n        for(uint i = 0; i < _contractAddresses.length; i++) {\r\n            addSmartContract(_contractAddresses[i]);\r\n        }\r\n    }\r\n\r\n    function removeSmartContract(address _contractAddress) accessible external {\r\n        erc20SummaryStorage.removeSmartContractByAddress(_contractAddress);\r\n    }\r\n\r\n    function erc20BalanceForAddress(address _queryAddress) external view returns (address[], uint[], uint8[]) {\r\n        uint amountOfSmartContracts = erc20SummaryStorage.getSmartContractsLength();\r\n        address[] memory contractAddresses = new address[](amountOfSmartContracts);\r\n        uint[] memory balances = new uint[](amountOfSmartContracts);\r\n        uint8[] memory decimals = new uint8[](amountOfSmartContracts);\r\n        address tempErc20ContractAddress;\r\n        Erc20 tempErc20Contract;\r\n\r\n        for (uint i = 0; i < amountOfSmartContracts; i++) {\r\n            tempErc20ContractAddress = erc20SummaryStorage.getSmartContractByPosition(i);\r\n            tempErc20Contract = Erc20(tempErc20ContractAddress);\r\n            contractAddresses[i] = tempErc20ContractAddress;\r\n            balances[i] = tempErc20Contract.balanceOf(_queryAddress);\r\n            decimals[i] = tempErc20Contract.decimals();\r\n        }\r\n        return (contractAddresses, balances, decimals);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"addSmartContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"denyAccess\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"accessAllowed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"removeSmartContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"toggleContractAccessForEverybody\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"allowAccess\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_queryAddress\",\"type\":\"address\"}],\"name\":\"erc20BalanceForAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"uint8[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"toggleContractStopped\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contractAddresses\",\"type\":\"address[]\"}],\"name\":\"addSmartContracts\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_erc20SummaryStorage\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"Erc20SummaryLogic","CompilerVersion":"v0.4.20+commit.3155dd80","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000000a25dec5cfc66d5c9ca57176fa3a0f174a9f0","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":"bzzr://62b374d41654f8b9e0553ff6e3217258973165c8507c48055c5419c85b9d8f9d"}]