[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/AccountProxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {OperationCenterInterface} from \\\"./interfaces/IOperationCenter.sol\\\";\\n\\ncontract AccountProxy {\\n\\n    // auth is shared storage with AccountProxy and any OpCode.\\n    mapping(address => bool) internal _auth;\\n\\n    address internal immutable opCenterAddress;\\n\\n    constructor(address _opCenterAddress) {\\n        opCenterAddress = _opCenterAddress;\\n    }\\n\\n    fallback() external payable {\\n        delegate(msg.sig);\\n    }\\n\\n    receive() external payable {\\n        if (msg.sig != 0x00000000) {\\n            delegate(msg.sig);\\n        }\\n    }\\n\\n    function delegate(bytes4 _sig) internal {\\n        address _opCodeAddress = OperationCenterInterface(opCenterAddress)\\n            .getOpCodeAddress(_sig);\\n        require(_opCodeAddress != address(0), \\\"CHFRY Account: Not found OpCode\\\");\\n        assembly {\\n            calldatacopy(0, 0, calldatasize())\\n            let result := delegatecall(gas(), _opCodeAddress, 0, calldatasize(), 0, 0)\\n            returndatacopy(0, 0, returndatasize())\\n            switch result\\n                case 0 { revert(0, returndatasize()) }\\n                default { return(0, returndatasize()) }\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/interfaces/IOperationCenter.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface OperationCenterInterface {\\n    function eventCenterAddress() external view returns (address);\\n    function connectorCenterAddress() external view returns (address);\\n    function tokenCenterAddress() external view returns (address);\\n    function protocolCenterAddress() external view returns (address);\\n    function getOpCodeAddress(bytes4 _sig) external view returns (address);\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_opCenterAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"AccountProxy","CompilerVersion":"v0.8.6+commit.11564f7e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000775bab8bf0f136f1cd0d4d342d5cabb00d0e84ba","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]