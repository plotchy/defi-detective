[{"SourceCode":"pragma solidity >=0.4.0 <0.7.0;\r\n\r\ncontract Identity {\r\n\r\n     // ************ Modifier *********** //\r\n    modifier onlyManager() {\r\n        require(msg.sender == owner, \"Not allowed\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyAddressAllowed() {\r\n        require(addressAllowed[msg.sender] == true, \"Not allowed\");\r\n        _;\r\n    }\r\n\r\n\r\n    // ************** Events ************ //\r\n    event addressAllowedAdded(string, address);\r\n    event addressAllowedRemoved(string, address);\r\n    event memberAdded(string, string);\r\n    event memeberRemoved(string, string);\r\n    event updated(string, string);\r\n\r\n\r\n    address private owner;\r\n    mapping (address => bool) private addressAllowed;\r\n    mapping (string => bool) private member_exist;\r\n    mapping (string => address) private members;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function addAddressAllowed(address _address_allowed) external onlyManager {\r\n        addressAllowed[_address_allowed] = true;\r\n        emit addressAllowedAdded(\"Added new address allowed: \", _address_allowed);\r\n    }\r\n\r\n    function removeAddressAllowed(address _address_allowed) external onlyManager {\r\n        addressAllowed[_address_allowed] = false;\r\n        emit addressAllowedRemoved(\"Removed address allowed: \", _address_allowed);\r\n    }\r\n\r\n    function addMember(string calldata hash, address _address) external onlyAddressAllowed {\r\n        require(member_exist[hash] == false, \"Member already exist\");\r\n\r\n        members[hash] = _address;\r\n        member_exist[hash] = true;\r\n\r\n        emit memberAdded(\"Added new member with hash: \", hash);\r\n    }\r\n\r\n    function removeMember(string calldata hash) external onlyAddressAllowed {\r\n        require(member_exist[hash] == true, \"Member does not exist\");\r\n\r\n        members[hash] = address(0x0);\r\n        member_exist[hash] = false;\r\n\r\n        emit memeberRemoved(\"Removed member with hash: \", hash);\r\n    }\r\n\r\n    function updateMember(string calldata hash, address _address) external onlyAddressAllowed {\r\n        require(member_exist[hash] == true, \"Member does not exist\");\r\n\r\n        members[hash] = _address;\r\n\r\n        emit updated(\"Updated member with hash: \", hash);\r\n    }\r\n\r\n    function isTrusted(string calldata hash, address _address) external view onlyAddressAllowed returns (bool)  {\r\n        require(bytes(hash).length > 0, \"Hash is required\");\r\n        require(_address != address(0), \"address is required\");\r\n\r\n        address tmp_address = members[hash];\r\n\r\n        if (tmp_address == _address) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressAllowedAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressAllowedRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"memberAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"memeberRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"updated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address_allowed\",\"type\":\"address\"}],\"name\":\"addAddressAllowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"hash\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"hash\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isTrusted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address_allowed\",\"type\":\"address\"}],\"name\":\"removeAddressAllowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"hash\",\"type\":\"string\"}],\"name\":\"removeMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"hash\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"updateMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Identity","CompilerVersion":"v0.6.4+commit.1dca32f3","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://9c54c8e73e61dcb602750c9dad17f769f0da93bfd1810d18102f227730f6b9a3"}]