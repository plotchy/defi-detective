[{"SourceCode":"pragma solidity >=0.7.0 <0.8.0;\r\n\r\ninterface I{\r\n\tfunction getPair(address t, address t1) external view returns(address pair);\r\n\tfunction createPair(address t, address t1) external returns(address pair);\r\n\tfunction init(uint Eth,address pair) external;\r\n\tfunction deposit() external payable;\r\n\tfunction transfer(address to, uint value) external returns(bool);\r\n\tfunction mint(address to) external returns(uint liquidity);\r\n}\r\n\r\npragma solidity >=0.7.0 <0.8.0;\r\n\r\n// Author: Sam Porter\r\n// With LGE it's now possible to create fairer distribution and fund promising projects without VC vultures at all.\r\n// Non-upgradeable, not owned, liquidity is being created automatically on first transaction after last block of LGE.\r\n// Founders' liquidity is not locked, instead an incentive to keep it is introduced.\r\n// The Event lasts for ~2 months to ensure fair distribution.\r\n// 0,5% of contributed Eth goes to developer for earliest development expenses including audits and bug bounties.\r\n// Blockchain needs no VCs, no authorities.12631000 81000\r\n\r\n//import \"./I.sol\";\r\n\r\ncontract FoundingEvent {\r\n\tmapping(address => uint) public contributions;\r\n\taddress payable private _deployer;\r\n\tuint88 private _phase;\r\n\tbool private _lgeOngoing;\r\n\tuint private _ETHDeposited;\r\n\r\n\tconstructor() {_deployer = msg.sender;_lgeOngoing = true;}\r\n\r\n\tfunction depositEth() external payable {\r\n\t\trequire(_lgeOngoing == true);\r\n\t\tuint amount = msg.value;\r\n\t\tif (block.number >= 12550000) {uint phase = _phase; if(block.number >= phase+12550000){_phase = uint88(phase + 9000);_createLiquidity(phase);}}\r\n\t\tuint deployerShare = amount/100; amount -= deployerShare; _deployer.transfer(deployerShare);\r\n\t\tcontributions[msg.sender] += amount;\r\n\t}\r\n\r\n\tfunction _createLiquidity(uint phase) internal {\r\n\t\taddress WETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n\t\taddress token = 0xc8f1999009f6Cb7d712a25cA219E0ff2a9Ea0290;\r\n\t\taddress staking = 0xB0b3E52e432b80D3A37e15AB6BBF4673225e160f;\r\n\t\taddress factory = 0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f;\r\n\t\taddress tknETHLP = I(factory).getPair(token,WETH);\r\n\t\tif (tknETHLP == address(0)) {tknETHLP=I(factory).createPair(token, WETH);}\r\n\t\t_ETHDeposited += address(this).balance;\r\n\t\tuint ethToDeposit = address(this).balance;\r\n\t\tuint tokenToDeposit = 1e23;\r\n\t\tif (phase == 81000) {I(staking).init(_ETHDeposited, tknETHLP);delete _lgeOngoing; delete _ETHDeposited; delete _phase; delete _deployer;}\r\n\t\tI(WETH).deposit{value: ethToDeposit}();\r\n\t\tI(token).transfer(tknETHLP, tokenToDeposit);\r\n\t\tI(WETH).transfer(tknETHLP, ethToDeposit);\r\n\t\tI(tknETHLP).mint(staking);\r\n\t}\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"FoundingEvent","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://abba980e1b8fbf242c235d942aaa84e6370824e6172b26e97aa7523fabd242ea"}]