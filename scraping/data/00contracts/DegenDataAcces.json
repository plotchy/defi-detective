[{"SourceCode":"pragma solidity ^0.8.0;\r\n\r\ncontract DegenDataAccess {\r\n    \r\n    address private owner;\r\n    uint256 public registrationFee;\r\n    mapping(address => bool) public isUserRegistered; \r\n    \r\n \r\n     constructor(){\r\n         owner = msg.sender;\r\n         registrationFee = 0.1 ether; \r\n     }\r\n     \r\n     //modifiers\r\n     modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only Owner Can Perform this function\");\r\n         _;\r\n    }\r\n    \r\n    //fallback\r\n    fallback() external payable\r\n    {\r\n        revert();\r\n    }\r\n     \r\n     \r\n     //Getters\r\n     function getRegistrationFee() public view returns(uint256){\r\n         return(registrationFee);\r\n     }\r\n     \r\n     function getOwner() public view returns(address){\r\n         return owner;\r\n     }\r\n     \r\n     //Setters\r\n     function setNewOwner(address _newOwner) public onlyOwner {\r\n         owner = _newOwner;\r\n     }\r\n     \r\n     function setNewRegistrationPrice(uint256 _newFee) public onlyOwner{\r\n         registrationFee = _newFee;\r\n     }\r\n     \r\n     function register() public payable {\r\n      require(msg.value >= registrationFee, \"Insufficient funds sent\");\r\n      require(isUserRegistered[msg.sender] == false, \"You already registered you knucklehead\"); \r\n      isUserRegistered[msg.sender] = true;\r\n    }\r\n     \r\n    function withdraw() public onlyOwner {\r\n        payable(msg.sender).transfer(address(this).balance);\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegistrationFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isUserRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registrationFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"setNewRegistrationPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"DegenDataAccess","CompilerVersion":"v0.8.9+commit.e5eed63a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Unlicense","Proxy":"0","Implementation":"","SwarmSource":"ipfs://ccf819ba1c4a1cf1f934ee48d41ffcc7f2255b6ef72f40874601ba5c9ef98057"}]