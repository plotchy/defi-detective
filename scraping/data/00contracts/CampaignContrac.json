[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b != 0);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract ERC20Base {\r\n\tuint public totalSupply;\r\n\r\n\tevent Transfer(address indexed from, address indexed to, uint value);\r\n\tevent Approval(address indexed owner, address indexed spender, uint value);\r\n\r\n\tfunction balanceOf(address who) public view returns (uint);\r\n  \tfunction transfer(address to, uint value) public returns (bool);\r\n  \tfunction allowance(address owner, address spender) public view returns (uint);\r\n  \tfunction transferFrom(address from, address to, uint value) public returns (bool);\r\n  \tfunction approve(address spender, uint value) public returns (bool);\r\n}\r\n\r\ncontract CampaignContract {\r\n\tusing SafeMath for uint256;\r\n\t\r\n\taddress internal owner;\r\n\t\r\n\t//Limits are recorded as USD in ether units (1 ether = 1 USD) [this is units not actual price]\r\n\tuint256 public minUSD;\r\n\tuint256 public maxUSD;\r\n\tuint256 public maxContribution;\r\n\tuint256 public minContribution;\r\n\r\n\tstruct KYCObject {\r\n\t\tbytes32 phone;\r\n\t\tbytes32 name;\r\n\t\tbytes32 occupation;\r\n\t\tbytes32 addressOne;\r\n\t\tbytes32 addressTwo;\r\n\t}\r\n\t\r\n\tmapping (address => KYCObject) internal contributionKYC;\r\n\r\n\tmapping (address => uint256) internal amountAttempted;\r\n\tmapping (address => uint256) internal amountContributed;\r\n\r\n\tuint256 public amountRaised; //Value strictly increases and tracks total raised.\r\n\tuint256 public amountRemaining; //Value represents amount that can be withdrawn.\r\n\r\n\tevent OwnerChanged(address indexed from, address indexed to);\r\n\tevent LimitsChanged(uint256 indexed newMin, uint256 indexed newMax, uint256 indexed price);\r\n\r\n\tevent KYCSubmitted(address indexed who, bytes32 phone, bytes32 name, bytes32 occupation, bytes32 addrOne, bytes32 addrTwo);\r\n\r\n\tevent ContributionReceived(address indexed from, uint256 amount);\r\n\tevent ContributionWithdrawn(address indexed from, uint256 amount);\r\n\r\n\tevent KYCReset(address indexed by, address indexed who);\r\n\tevent ContributionIncrease(uint256 indexed time, uint256 amount);\r\n\tevent ContributionAccepted(address indexed from, uint256 amount, uint256 total);\r\n\tevent ContributionReturned(address indexed from, uint256 amount);\r\n\t\r\n\tevent EtherWithdrawn(address indexed by, uint256 amount, uint256 remaining);\r\n\r\n\tfunction CampaignContract() public {\r\n\t\towner = msg.sender;\r\n\t\t\r\n\t\tminUSD = 1 ether;\r\n\t\tmaxUSD = 950 ether;\r\n\t\tminContribution = .1 ether;\r\n\t\tmaxContribution = 1 ether;\r\n\r\n\t\tamountRaised = 0 ether;\r\n\t\tamountRemaining = 0 ether;\r\n\r\n\t}\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\t\r\n\tfunction changeOwner(address addr) external onlyOwner {\r\n\t\trequire(addr != address(0));\r\n\t\towner = addr;\r\n\t\r\n\t\temit OwnerChanged(msg.sender, addr);\r\n\t}\r\n\t\r\n\tfunction changeLimits(uint256 price) external onlyOwner {\r\n\t\tuint256 adjPrice = price.div(10**9);\r\n\t\tuint256 adjMin = minUSD.mul(10**9);\r\n\t\tuint256 adjMax = maxUSD.mul(10**9);\r\n\t\r\n\t\tmaxContribution = adjMax.div(adjPrice);\r\n\t\tminContribution = adjMin.div(adjPrice);\r\n\t\r\n\t\temit LimitsChanged(minContribution, maxContribution, price);\r\n\t}\r\n\r\n\tmodifier hasKYCInfo(address addr) {\r\n\t\trequire(contributionKYC[addr].phone != \"\");\r\n\t\trequire(contributionKYC[addr].name != \"\");\r\n\t\t_;\r\n\t}\r\n\t\r\n\tfunction verifyKYC(bytes32 phone, bytes32 name, bytes32 occupation, bytes32 addrOne, bytes32 addrTwo) external {\r\n\t\trequire(contributionKYC[msg.sender].phone == \"\");\r\n\t\trequire(contributionKYC[msg.sender].name == \"\");\r\n\t\trequire(phone != \"\");\r\n\t\trequire(name != \"\");\r\n\t\trequire(occupation != \"\");\r\n\t\trequire(addrOne != \"\");\r\n\t\trequire(addrTwo != \"\");\r\n\t\r\n\t\tcontributionKYC[msg.sender].phone = phone;\r\n\t\tcontributionKYC[msg.sender].name = name;\r\n\t\tcontributionKYC[msg.sender].occupation = occupation;\r\n\t\tcontributionKYC[msg.sender].addressOne = addrOne;\r\n\t\tcontributionKYC[msg.sender].addressTwo = addrTwo;\r\n\t\r\n\t\temit KYCSubmitted(msg.sender, phone, name, occupation, addrOne, addrTwo);\r\n\t}\r\n\t\r\n\tfunction getPhone(address addr) external view returns (bytes32 result) {\r\n\t\treturn contributionKYC[addr].phone;\r\n\t}\r\n\t\r\n\tfunction getName(address addr) external view returns (bytes32 result) {\r\n\t\treturn contributionKYC[addr].name;\r\n\t}\r\n\t\r\n\tfunction getOccupation(address addr) external view returns (bytes32 result) {\r\n\t\treturn contributionKYC[addr].occupation;\r\n\t}\r\n\t\r\n\tfunction getAddressOne(address addr) external view returns (bytes32 result) {\r\n\t\treturn contributionKYC[addr].addressOne;\r\n\t}\r\n\t\r\n\tfunction getAddressTwo(address addr) external view returns (bytes32 result) {\r\n\t\treturn contributionKYC[addr].addressTwo;\r\n\t}\r\n\r\n\tfunction contribute() external hasKYCInfo(msg.sender) payable {\r\n\t\t//Make sure they're not attempting to submit more than max.\r\n\t\tuint256 finalAttempted = amountAttempted[msg.sender].add(msg.value);\r\n\t\trequire(finalAttempted <= maxContribution);\r\n\t\r\n\t\t//Make sure the attempt added with the already submitted amount isn't more than max.\r\n\t\tuint256 finalAmount = amountContributed[msg.sender].add(finalAttempted);\r\n\t\trequire(finalAmount >= minContribution);\r\n\t\trequire(finalAmount <= maxContribution);\r\n\t\r\n\t\tamountAttempted[msg.sender] = finalAttempted;\r\n\t\temit ContributionReceived(msg.sender, msg.value);\r\n\t}\r\n\t\r\n\tfunction withdrawContribution() external hasKYCInfo(msg.sender) {\r\n\t\trequire(amountAttempted[msg.sender] > 0);\r\n\t\tuint256 amount = amountAttempted[msg.sender];\r\n\t\tamountAttempted[msg.sender] = 0;\r\n\t\r\n\t\tmsg.sender.transfer(amount);\r\n\t\temit ContributionWithdrawn(msg.sender, amount);\r\n\t}\r\n\t\r\n\tfunction getAmountAttempted(address addr) external view returns (uint256 amount) {\r\n\t\treturn amountAttempted[addr];\r\n\t}\r\n\t\r\n\tfunction getAmountContributed(address addr) external view returns (uint256 amount) {\r\n\t\treturn amountContributed[addr];\r\n\t}\r\n\t\r\n\tfunction getPotentialAmount(address addr) external view returns (uint256 amount) {\r\n\t\treturn amountAttempted[addr].add(amountContributed[addr]);\r\n\t}\r\n\r\n\tfunction resetKYC(address addr) external onlyOwner hasKYCInfo(addr) {\r\n\t\t//Cant reset KYC for someone who you've accepted from already.\r\n\t\trequire(amountContributed[addr] == 0);\r\n\t\r\n\t\t//Someone having their KYC reset must have withdrawn their attempts.\r\n\t\trequire(amountAttempted[addr] == 0);\r\n\t\r\n\t\tcontributionKYC[addr].phone = \"\";\r\n\t\tcontributionKYC[addr].name = \"\";\r\n\t\tcontributionKYC[addr].occupation = \"\";\r\n\t\tcontributionKYC[addr].addressOne = \"\";\r\n\t\tcontributionKYC[addr].addressTwo = \"\";\r\n\t\r\n\t\temit KYCReset(msg.sender, addr);\r\n\t}\r\n\t\r\n\tfunction acceptContribution(address addr) external onlyOwner hasKYCInfo(addr) {\r\n\t\trequire(amountAttempted[addr] >= minContribution);\r\n\t\trequire(amountContributed[addr].add(amountAttempted[addr]) <= maxContribution);\r\n\t\r\n\t\tuint256 amount = amountAttempted[addr];\r\n\t\tamountAttempted[addr] = 0;\r\n\t\tamountContributed[addr] = amountContributed[addr].add(amount);\r\n\t\tamountRaised = amountRaised.add(amount);\r\n\t\tamountRemaining = amountRemaining.add(amount);\r\n\t\r\n\t\temit ContributionIncrease(now, amountRaised);\r\n\t\temit ContributionAccepted(addr, amount, amountContributed[addr]);\r\n\t}\r\n\t\r\n\tfunction rejectContribution(address addr) external onlyOwner {\r\n\t\trequire(amountAttempted[addr] > 0);\r\n\t\r\n\t\tuint256 amount = amountAttempted[addr];\r\n\t\tamountAttempted[addr] = 0;\r\n\t\r\n\t\taddr.transfer(amount);\r\n\t\temit ContributionReturned(addr, amount);\r\n\t}\r\n\t\r\n\tfunction withdrawToWallet(uint256 amount) external onlyOwner {\r\n\t\trequire(amount <= amountRemaining);\r\n\t\r\n\t\tamountRemaining = amountRemaining.sub(amount);\r\n\t\tmsg.sender.transfer(amount);\r\n\t\temit EtherWithdrawn(msg.sender, amount, amountRemaining);\r\n\t}\r\n\t\r\n\tfunction retrieveAssets(address which) external onlyOwner {\r\n\t\tERC20Base token = ERC20Base(which);\r\n\t\tuint256 amount = token.balanceOf(address(this));\r\n\t\trequire(token.transfer(msg.sender, amount));\r\n\t}\r\n\t\r\n\tfunction killContract() external onlyOwner {\r\n\t\tselfdestruct(msg.sender);\r\n\t}\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"withdrawContribution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"killContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxUSD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getAddressOne\",\"outputs\":[{\"name\":\"result\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"changeLimits\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"rejectContribution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getPotentialAmount\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"which\",\"type\":\"address\"}],\"name\":\"retrieveAssets\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getName\",\"outputs\":[{\"name\":\"result\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getPhone\",\"outputs\":[{\"name\":\"result\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxContribution\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"acceptContribution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getOccupation\",\"outputs\":[{\"name\":\"result\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minContribution\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getAmountContributed\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"resetKYC\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"contribute\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minUSD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"phone\",\"type\":\"bytes32\"},{\"name\":\"name\",\"type\":\"bytes32\"},{\"name\":\"occupation\",\"type\":\"bytes32\"},{\"name\":\"addrOne\",\"type\":\"bytes32\"},{\"name\":\"addrTwo\",\"type\":\"bytes32\"}],\"name\":\"verifyKYC\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getAddressTwo\",\"outputs\":[{\"name\":\"result\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getAmountAttempted\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRemaining\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"newMin\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"newMax\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"LimitsChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"phone\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"occupation\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"addrOne\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"addrTwo\",\"type\":\"bytes32\"}],\"name\":\"KYCSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ContributionReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ContributionWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"by\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"who\",\"type\":\"address\"}],\"name\":\"KYCReset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ContributionIncrease\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"ContributionAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ContributionReturned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"by\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"remaining\",\"type\":\"uint256\"}],\"name\":\"EtherWithdrawn\",\"type\":\"event\"}]","ContractName":"CampaignContract","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":"bzzr://5764b8dbe18e720c1366e302b18a83017a9d888da0661f5c74b2de38464b886a"}]