[{"SourceCode":"// SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract MultipleCaller {\r\n\r\n    struct Call { \r\n        address contractAddress;\r\n        bytes payload;\r\n    }\r\n\r\n    function call (Call[] memory requests) external view returns (bytes[] memory) {\r\n        bytes[] memory results = new bytes[](requests.length);\r\n        for (uint i = 0; i < requests.length; i++) {\r\n            Call memory request = requests[i];\r\n            (bool success, bytes memory result) = request.contractAddress.staticcall(request.payload);\r\n            require(success);\r\n            results[i] = result;\r\n        }\r\n        return results;\r\n    }\r\n\r\n    function call (bytes[] calldata requests) external view returns (bytes[] memory) {\r\n        bytes[] memory results = new bytes[](requests.length);\r\n        for (uint i = 0; i < requests.length; i++) {\r\n            bytes calldata request = requests[i];\r\n            require(request.length >= 20);\r\n            address contractAddress = address(bytes20(request[0:20]));\r\n            bytes calldata payload = request[20:];\r\n            (bool success, bytes memory result) = contractAddress.staticcall(payload);\r\n            require(success);\r\n            results[i] = result;\r\n        }\r\n        return results;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"requests\",\"type\":\"bytes[]\"}],\"name\":\"call\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct MultipleCaller.Call[]\",\"name\":\"requests\",\"type\":\"tuple[]\"}],\"name\":\"call\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"MultipleCaller","CompilerVersion":"v0.8.14+commit.80d49f37","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://7b4fbc3bbbdd9123fb60dac14e6fd3b97fedaed4137d9ae4af74a09ee8b5f902"}]