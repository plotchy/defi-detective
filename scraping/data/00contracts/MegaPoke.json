[{"SourceCode":"// SPDX-License-Identifier: AGPL-3.0\r\n// The MegaPoker\r\n//\r\n// Copyright (C) 2020 Maker Ecosystem Growth Holdings, INC.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\npragma solidity ^0.6.11;\r\n\r\ninterface OsmLike {\r\n    function poke() external;\r\n    function pass() external view returns (bool);\r\n}\r\n\r\ninterface SpotLike {\r\n    function poke(bytes32) external;\r\n}\r\n\r\ncontract MegaPoker {\r\n    OsmLike constant eth          = OsmLike(0x81FE72B5A8d1A857d176C3E7d5Bd2679A9B85763);\r\n    OsmLike constant bat          = OsmLike(0xB4eb54AF9Cc7882DF0121d26c5b97E802915ABe6);\r\n    OsmLike constant btc          = OsmLike(0xf185d0682d50819263941e5f4EacC763CC5C6C42);\r\n    OsmLike constant knc          = OsmLike(0xf36B79BD4C0904A5F350F1e4f776B81208c13069);\r\n    OsmLike constant zrx          = OsmLike(0x7382c066801E7Acb2299aC8562847B9883f5CD3c);\r\n    OsmLike constant mana         = OsmLike(0x8067259EA630601f319FccE477977E55C6078C13);\r\n    OsmLike constant usdt         = OsmLike(0x7a5918670B0C390aD25f7beE908c1ACc2d314A3C);\r\n    OsmLike constant comp         = OsmLike(0xBED0879953E633135a48a157718Aa791AC0108E4);\r\n    OsmLike constant link         = OsmLike(0x9B0C694C6939b5EA9584e9b61C7815E8d97D9cC7);\r\n    OsmLike constant lrc          = OsmLike(0x9eb923339c24c40Bef2f4AF4961742AA7C23EF3a);\r\n    OsmLike constant yfi          = OsmLike(0x5F122465bCf86F45922036970Be6DD7F58820214);\r\n    OsmLike constant bal          = OsmLike(0x3ff860c0F28D69F392543A16A397D0dAe85D16dE);\r\n    OsmLike constant uni          = OsmLike(0xf363c7e351C96b910b92b45d34190650df4aE8e7);\r\n    OsmLike constant aave         = OsmLike(0x8Df8f06DC2dE0434db40dcBb32a82A104218754c);\r\n    OsmLike constant univ2daieth  = OsmLike(0x87ecBd742cEB40928E6cDE77B2f0b5CFa3342A09);\r\n    OsmLike constant univ2wbtceth = OsmLike(0x771338D5B31754b25D2eb03Cea676877562Dec26);\r\n    OsmLike constant univ2usdceth = OsmLike(0xECB03Fec701B93DC06d19B4639AA8b5a838472BE);\r\n    OsmLike constant univ2daiusdc = OsmLike(0x25CD858a00146961611b18441353603191f110A0);\r\n    OsmLike constant univ2ethusdt = OsmLike(0x9b015AA3e4787dd0df8B43bF2FE6d90fa543E13B);\r\n    OsmLike constant univ2linketh = OsmLike(0x628009F5F5029544AE84636Ef676D3Cc5755238b);\r\n    OsmLike constant univ2unieth  = OsmLike(0x8Ce9E9442F2791FC63CD6394cC12F2dE4fbc1D71);\r\n    OsmLike constant univ2wbtcdai = OsmLike(0x5FB5a346347ACf4FCD3AAb28f5eE518785FB0AD0);\r\n    OsmLike constant univ2aaveeth = OsmLike(0x8D34DC2c33A6386E96cA562D8478Eaf82305b81a);\r\n    OsmLike constant univ2daiusdt = OsmLike(0x69562A7812830E6854Ffc50b992c2AA861D5C2d3);\r\n    SpotLike constant spot        = SpotLike(0x65C79fcB50Ca1594B025960e539eD7A9a6D434A3);\r\n\r\n    function process() internal {\r\n        if (         eth.pass())           eth.poke();\r\n        if (         bat.pass())           bat.poke();\r\n        if (         btc.pass())           btc.poke();\r\n        if (         knc.pass())           knc.poke();\r\n        if (         zrx.pass())           zrx.poke();\r\n        if (        mana.pass())          mana.poke();\r\n        if (        usdt.pass())          usdt.poke();\r\n        if (        comp.pass())          comp.poke();\r\n        if (        link.pass())          link.poke();\r\n        if (         lrc.pass())           lrc.poke();\r\n        if (         yfi.pass())           yfi.poke();\r\n        if (         bal.pass())           bal.poke();\r\n        if (         uni.pass())           uni.poke();\r\n        if (        aave.pass())          aave.poke();\r\n        if ( univ2daieth.pass())   univ2daieth.poke();\r\n        if (univ2wbtceth.pass())  univ2wbtceth.poke();\r\n        if (univ2usdceth.pass())  univ2usdceth.poke();\r\n        if (univ2daiusdc.pass())  univ2daiusdc.poke();\r\n        if (univ2ethusdt.pass())  univ2ethusdt.poke();\r\n        if (univ2linketh.pass())  univ2linketh.poke();\r\n        if ( univ2unieth.pass())   univ2unieth.poke();\r\n        if (univ2wbtcdai.pass())  univ2wbtcdai.poke();\r\n        if (univ2aaveeth.pass())  univ2aaveeth.poke();\r\n\r\n        spot.poke(\"ETH-A\");\r\n        spot.poke(\"BAT-A\");\r\n        spot.poke(\"WBTC-A\");\r\n        spot.poke(\"KNC-A\");\r\n        spot.poke(\"ZRX-A\");\r\n        spot.poke(\"MANA-A\");\r\n        spot.poke(\"USDT-A\");\r\n        spot.poke(\"COMP-A\");\r\n        spot.poke(\"LINK-A\");\r\n        spot.poke(\"LRC-A\");\r\n        spot.poke(\"ETH-B\");\r\n        spot.poke(\"YFI-A\");\r\n        spot.poke(\"BAL-A\");\r\n        spot.poke(\"RENBTC-A\");\r\n        spot.poke(\"UNI-A\");\r\n        spot.poke(\"AAVE-A\");\r\n        spot.poke(\"UNIV2DAIETH-A\");\r\n        spot.poke(\"UNIV2WBTCETH-A\");\r\n        spot.poke(\"UNIV2USDCETH-A\");\r\n        spot.poke(\"UNIV2DAIUSDC-A\");\r\n        spot.poke(\"UNIV2ETHUSDT-A\");\r\n        spot.poke(\"UNIV2LINKETH-A\");\r\n        spot.poke(\"UNIV2UNIETH-A\");\r\n        spot.poke(\"UNIV2WBTCDAI-A\");\r\n        spot.poke(\"UNIV2AAVEETH-A\");\r\n    }\r\n\r\n    function poke() external {\r\n        process();\r\n\r\n        if (univ2daiusdt.pass())  univ2daiusdt.poke();\r\n\r\n        spot.poke(\"UNIV2DAIUSDT-A\");\r\n    }\r\n\r\n    // Use for poking OSMs prior to collateral being added\r\n    function pokeTemp() external {\r\n        process();\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"name\":\"poke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pokeTemp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"MegaPoker","CompilerVersion":"v0.6.11+commit.5ef660b1","OptimizationUsed":"1","Runs":"1000","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Unknown","Proxy":"0","Implementation":"","SwarmSource":"ipfs://805e3566c86afde5ebb3f92366bed985c8fbab64eec8f0ee241ba1ef493cb59a"}]