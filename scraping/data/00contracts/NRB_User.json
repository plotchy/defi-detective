[{"SourceCode":"pragma solidity ^0.4.14;\r\n\r\ncontract ERC20Interface {\r\n    function totalSupply() public constant returns (uint);\r\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// contract WhiteListAccess\r\n// ----------------------------------------------------------------------------\r\ncontract WhiteListAccess {\r\n    \r\n    function WhiteListAccess() public {\r\n        owner = msg.sender;\r\n        whitelist[owner] = true;\r\n        whitelist[address(this)] = true;        \r\n    }\r\n    \r\n    address public owner;\r\n    mapping (address => bool) whitelist;\r\n\r\n    modifier onlyBy(address who) { require(msg.sender == who); _; }\r\n    modifier onlyOwner {require(msg.sender == owner); _;}\r\n    modifier onlyWhitelisted {require(whitelist[msg.sender]); _;}\r\n\r\n    function addToWhiteList(address trusted) public onlyOwner() {\r\n        whitelist[trusted] = true;\r\n    }\r\n\r\n    function removeFromWhiteList(address untrusted) public onlyOwner() {\r\n        whitelist[untrusted] = false;\r\n    }\r\n\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// NRB_Common contract\r\n// ----------------------------------------------------------------------------\r\ncontract NRB_Common is WhiteListAccess {\r\n    \r\n    string public name;             // contract's name\r\n    bool _init;\r\n    \r\n    function NRB_Common() public { ETH_address = 0x1; }\r\n\r\n    // Deployment\r\n    address public ETH_address;    // representation of Ether as Token (0x1)\r\n    address public FLC_address;\r\n    address public NRB_address;\r\n\r\n    function init(address _main, address _flc) public {\r\n        require(!_init);\r\n        FLC_address = _flc;\r\n        NRB_address = _main;\r\n        whitelist[NRB_address] = true;\r\n        _init = true;\r\n    }\r\n\r\n    // Debug\r\n    event Debug(string, bool);\r\n    event Debug(string, uint);\r\n    event Debug(string, uint, uint);\r\n    event Debug(string, uint, uint, uint);\r\n    event Debug(string, uint, uint, uint, uint);\r\n    event Debug(string, address);\r\n    event Debug(string, address, address);\r\n    event Debug(string, address, address, address);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// NRB_Users\r\n// ----------------------------------------------------------------------------\r\n\r\ncontract NRB_Users is NRB_Common {\r\n\r\n    // how much raised for each token\r\n    mapping(address => uint) raisedAmount;\r\n\r\n    // accounts[TOKEN][USER] = DAta()\r\n    mapping(address => mapping(address => Data)) public accounts;\r\n\r\n    // a list of users for each token\r\n    mapping(address =>  mapping(uint => address)) public tokenUsers;\r\n\r\n    // length of eath prev list\r\n    mapping(address => uint) public userindex;\r\n\r\n    // a global list of users (uniques ids across)\r\n    mapping(uint => address) user;\r\n\r\n    // length of prev list\r\n    uint public userlength;\r\n\r\n    // map of known tokens\r\n    mapping(address => bool) public tokenmap;\r\n\r\n    // list of known tokens\r\n    mapping(uint => address) public tokenlist;\r\n\r\n    // length of prev list\r\n    uint public tokenlength;\r\n\r\n    // list of tokens registered\r\n    struct Data {\r\n        bool registered;\r\n        uint time;\r\n        uint userid;\r\n        uint userindex;\r\n        uint paid;\r\n        uint credit;\r\n        uint flc;\r\n        address token;\r\n        string json;\r\n    }\r\n// --------------------------------------------------------------------------------\r\n    function NRB_Users() public {\r\n        userlength = 1;\r\n        name = \"NRB_Users\";\r\n    }\r\n\r\n    // User Registration ------------------------------------------\r\n    function registerUserOnToken(address _token, address _user, uint _value, uint _flc, string _json) public onlyWhitelisted() returns (uint) {\r\n        Debug(\"USER.registerUserOnToken() _token,_user,msg.sender\",_token,_user, msg.sender);\r\n        Debug(\"USER.registerUserOnToken() _valu, msg.value\",_value,msg.value);\r\n\r\n        uint _time = block.timestamp;\r\n        uint _userid = 0;\r\n        uint _userindex = 0;\r\n        uint _credit = 0;\r\n        \r\n        if (msg.sender != NRB_address) {\r\n            // is from somewhere else\r\n            _credit = _value;\r\n        }\r\n\r\n        if (accounts[_user][_token].registered) {\r\n            _userid = accounts[_user][_token].userid;\r\n            _userindex = accounts[_user][_token].userindex;\r\n        } else {\r\n            if (userindex[_token] == 0) {\r\n                userindex[_token] = 1;\r\n            }\r\n            _userindex                         = userindex[_token];\r\n            _userid                            = userlength;\r\n            user[_userid]                      = _user;\r\n            tokenUsers[_token][_userindex]     = _user;\r\n            accounts[_user][_token].registered = true;\r\n            accounts[_user][_token].userid     = _userid;\r\n            accounts[_user][_token].userindex  = _userindex;\r\n            userindex[_token]++;\r\n            userlength++;\r\n        }\r\n\r\n        accounts[_user][_token].time = _time;\r\n        if (keccak256(_json) != keccak256(\"NO-JSON\")) {\r\n            accounts[_user][_token].json = _json;\r\n        }\r\n\r\n        accounts[_user][_token].flc = accounts[_user][_token].flc + _flc; \r\n\r\n        accounts[_user][_token].paid = accounts[_user][_token].paid + _value;\r\n        accounts[_user][_token].credit = accounts[_user][_token].credit + _credit;\r\n        raisedAmount[_token] = raisedAmount[_token] + _value;\r\n\r\n        if (!tokenmap[_token]) {\r\n            tokenlist[tokenlength++] = _token;\r\n            tokenmap[_token] = true;\r\n        }\r\n\r\n        return _userindex;\r\n    }\r\n\r\n    // Getting Data ------------------------------\r\n    function getUserIndexOnEther(address _user) constant public returns (uint) {\r\n        require(accounts[_user][ETH_address].registered);\r\n        return accounts[_user][ETH_address].userindex;\r\n    }\r\n\r\n    function getUserIndexOnToken(address _token, address _user) constant public returns (uint) {\r\n        require(accounts[_user][_token].registered);\r\n        return accounts[_user][_token].userindex;\r\n    }\r\n    \r\n    function getUserLengthOnEther() constant public returns (uint) {\r\n        return this.getUserLengthOnToken(ETH_address);\r\n    }\r\n\r\n    function getUserLengthOnToken(address _token) constant public returns (uint) {\r\n        if (userindex[_token] < 2) {return 0;}\r\n        return userindex[_token]-1;\r\n    }\r\n\r\n    function getUserDataOnEther(uint _index) constant public returns (string) {\r\n        address _user = tokenUsers[ETH_address][_index];\r\n        return accounts[_user][ETH_address].json;\r\n    }\r\n\r\n    function getUserDataOnToken(address _token, uint _index) constant public returns (string) {\r\n        require(userindex[_token] > _index-1);\r\n        address _user = tokenUsers[_token][_index];\r\n        return accounts[_user][_token].json;\r\n    }\r\n    \r\n    function getUserNumbersOnEther(uint _index) constant public returns (uint, uint, uint, uint, uint, uint, uint, address) {\r\n        return getUserNumbersOnToken(ETH_address, _index);\r\n    }\r\n\r\n    function getUserNumbersOnToken(address _token, uint _index) constant public returns (uint, uint, uint, uint, uint, uint, uint, address) {\r\n        require(userindex[_token] > _index-1);\r\n        address _user = tokenUsers[_token][_index];\r\n        Data memory data = accounts[_user][_token];\r\n        uint _balance = getUserBalanceOnToken(_token, _user);\r\n        // we truncate the current balance of user because he or che is only allowed to show till 10 times what benn paid.\r\n        if (_balance > 9 * data.paid) {\r\n            _balance = 9 * data.paid;\r\n        }\r\n        _balance = _balance + data.paid;\r\n\r\n        return (data.time, _balance, data.paid, data.credit, data.flc, data.userid, data.userindex, _user);\r\n    }\r\n\r\n    function getUserBalanceOnEther(address _user) constant public returns (uint) {\r\n        return this.getUserBalanceOnToken(ETH_address, _user);\r\n    }\r\n\r\n    function getUserTotalPaid(address _user, address _token) constant public returns (uint) {\r\n        return accounts[_user][_token].paid;\r\n    }\r\n\r\n    function getUserTotalCredit(address _user, address _token) constant public returns (uint) {\r\n        return accounts[_user][_token].credit;\r\n    }\r\n\r\n    function getUserFLCEarned(address _user, address _token) constant public returns (uint) {\r\n        return accounts[_user][_token].flc;\r\n    }\r\n\r\n    function getUserBalanceOnToken(address _token, address _user) constant public returns (uint) {\r\n        if (_token == ETH_address) {\r\n            return _user.balance;\r\n        } else {\r\n            return ERC20Interface(_token).balanceOf(_user);\r\n        }\r\n    }\r\n\r\n\r\n    // recover tokens sent accidentally\r\n    function _withdrawal(address _token) public {\r\n        uint _balance =  ERC20Interface(_token).balanceOf(address(this));\r\n        if (_balance > 0) {\r\n            ERC20Interface(_token).transfer(owner, _balance);\r\n        }\r\n    }\r\n    \r\n    // Don't accept ETH\r\n    function () public payable {\r\n        revert();\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserBalanceOnToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"untrusted\",\"type\":\"address\"}],\"name\":\"removeFromWhiteList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_flc\",\"type\":\"uint256\"},{\"name\":\"_json\",\"type\":\"string\"}],\"name\":\"registerUserOnToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenmap\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserIndexOnEther\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getUserLengthOnToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ETH_address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"trusted\",\"type\":\"address\"}],\"name\":\"addToWhiteList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getUserFLCEarned\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FLC_address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenlist\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getUserLengthOnEther\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"userindex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"NRB_address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getUserDataOnEther\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenlength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getUserNumbersOnToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getUserNumbersOnEther\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getUserDataOnToken\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenUsers\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getUserTotalCredit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"accounts\",\"outputs\":[{\"name\":\"registered\",\"type\":\"bool\"},{\"name\":\"time\",\"type\":\"uint256\"},{\"name\":\"userid\",\"type\":\"uint256\"},{\"name\":\"userindex\",\"type\":\"uint256\"},{\"name\":\"paid\",\"type\":\"uint256\"},{\"name\":\"credit\",\"type\":\"uint256\"},{\"name\":\"flc\",\"type\":\"uint256\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"json\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserBalanceOnEther\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"_withdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"userlength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_main\",\"type\":\"address\"},{\"name\":\"_flc\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getUserTotalPaid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserIndexOnToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"\",\"type\":\"bool\"}],\"name\":\"Debug\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Debug\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Debug\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Debug\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Debug\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"\",\"type\":\"address\"}],\"name\":\"Debug\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"\",\"type\":\"address\"}],\"name\":\"Debug\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"\",\"type\":\"address\"}],\"name\":\"Debug\",\"type\":\"event\"}]","ContractName":"NRB_Users","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":"bzzr://84b5204ca5a4b39d23c4a0fab53deb82f877a38b4eefc38a1ed60c560dd4f87e"}]