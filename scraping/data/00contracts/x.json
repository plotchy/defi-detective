[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.10;\r\n\r\n\r\ncontract xd {\r\n    struct H {\r\n        uint256 h;\r\n        address r;\r\n        address j;\r\n        address p;\r\n        uint136 n;\r\n        uint40 q;\r\n        uint40 z;\r\n        uint24 e;\r\n        uint8 u;\r\n        uint256 N;\r\n        bytes32 O;\r\n        bytes32 b;\r\n        uint256 M;\r\n    }\r\n    struct P {\r\n        address r;\r\n        address j;\r\n        address p;\r\n        uint136 n;\r\n        uint40 q;\r\n        uint40 z;\r\n        uint24 e;\r\n        uint8 u;\r\n        uint256 N;\r\n        bytes32 O;\r\n        bytes32 b;\r\n        uint256 M;\r\n    }\r\n    struct D {\r\n        uint256 M;\r\n        uint256 n;\r\n        uint256 j;\r\n        uint256 r;\r\n    }\r\n\r\n    constructor(address z) {\r\n        B = z;\r\n    }\r\n\r\n    address immutable B;\r\n\r\n    function AaANwg8(P memory o) external payable {\r\n        D memory r = D(\r\n            o.M,\r\n            uint256(o.n),\r\n            uint256(uint160(o.j)),\r\n            uint256(uint160(o.r))\r\n        );\r\n\r\n        bytes memory j = abi.encodePacked(\r\n            hex\"ab834bab0000000000000000000000007be8076f4ea4a4ad08075c2508e481d6c946d12b00000000000000000000000000000000cd6eab3b2c4b0381247443b0cce5c40b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\r\n            r.r,\r\n            hex\"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007be8076f4ea4a4ad08075c2508e481d6c946d12b\",\r\n            r.j,\r\n            hex\"0000000000000000000000000000000000000000000000000000000000000000\",\r\n            uint256(uint160(o.p)),\r\n            r.r,\r\n            hex\"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\r\n            r.n,\r\n            hex\"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\r\n            uint256(o.e),\r\n            hex\"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\r\n            [r.n, uint256(0), uint256(o.q), uint256(o.z), uint256(o.N)],\r\n            hexa0000000000000000000000000000000000000000000000000000000000000074000000000000000000000000000000000000000000000000000000000000007e0000000000000000000000000000000000000000000000000000000000000088000000000000000000000000000000000000000000000000000000000000009200000000000000000000000000000000000000000000000000000000000000940000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\r\n            o.u,\r\n            hex\"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\r\n            o.O,\r\n            o.b,\r\n            hex\"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006423b872dd0000000000000000000000000000000000000000000000000000000000000000\",\r\n            uint256(uint160(msg.sender)),\r\n            r.M,\r\n            hex\"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006423b872dd\",\r\n            r.j,\r\n            hex\"0000000000000000000000000000000000000000000000000000000000000000\",\r\n            r.M,\r\n            hex\"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006400000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"\r\n        );\r\n\r\n        B.call{value: r.n}(j);\r\n\r\n        assembly {\r\n            if gt(selfbalance(), 0) {\r\n                let callStatus := call(\r\n                    gas(),\r\n                    caller(),\r\n                    selfbalance(),\r\n                    0,\r\n                    0,\r\n                    0,\r\n                    0\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    function BTiIUQ(H[] memory o) external payable {\r\n        uint256 i;\r\n\r\n        do {\r\n            if (o[i].h != 0) {\r\n                abi.encodeWithSelector(0xab834bab, new bytes(0), new bytes(0));\r\n            } else {\r\n                D memory r = D(\r\n                    o[i].M,\r\n                    uint256(o[i].n),\r\n                    uint256(uint160(o[i].j)),\r\n                    uint256(uint160(o[i].r))\r\n                );\r\n\r\n                bytes memory j = abi.encodePacked(\r\n                    hex\"ab834bab0000000000000000000000007be8076f4ea4a4ad08075c2508e481d6c946d12b00000000000000000000000000000000cd6eab3b2c4b0381247443b0cce5c40b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\r\n                    r.r,\r\n                    hex\"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007be8076f4ea4a4ad08075c2508e481d6c946d12b\",\r\n                    r.j,\r\n                    hex\"0000000000000000000000000000000000000000000000000000000000000000\",\r\n                    uint256(uint160(o[i].p)),\r\n                    r.r,\r\n                    hex\"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\r\n                    r.n,\r\n                    hex\"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\r\n                    uint256(o[i].e),\r\n                    hex\"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\r\n                    [\r\n                        r.n,\r\n                        uint256(0),\r\n                        uint256(o[i].q),\r\n                        uint256(o[i].z),\r\n                        uint256(o[i].N)\r\n                    ],\r\n                    hexa0000000000000000000000000000000000000000000000000000000000000074000000000000000000000000000000000000000000000000000000000000007e0000000000000000000000000000000000000000000000000000000000000088000000000000000000000000000000000000000000000000000000000000009200000000000000000000000000000000000000000000000000000000000000940000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\r\n                    o[i].u,\r\n                    hex\"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\r\n                    o[i].O,\r\n                    o[i].b,\r\n                    hex\"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006423b872dd0000000000000000000000000000000000000000000000000000000000000000\",\r\n                    uint256(uint160(msg.sender)),\r\n                    r.M,\r\n                    hex\"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006423b872dd\",\r\n                    r.j,\r\n                    hex\"0000000000000000000000000000000000000000000000000000000000000000\",\r\n                    r.M,\r\n                    hex\"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006400000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"\r\n                );\r\n                B.call{value: r.n}(j);\r\n            }\r\n            i = i + 1;\r\n        } while (i < o.length);\r\n\r\n        assembly {\r\n            if gt(selfbalance(), 0) {\r\n                let callStatus := call(\r\n                    gas(),\r\n                    caller(),\r\n                    selfbalance(),\r\n                    0,\r\n                    0,\r\n                    0,\r\n                    0\r\n                )\r\n            }\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"z\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"r\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"j\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"p\",\"type\":\"address\"},{\"internalType\":\"uint136\",\"name\":\"n\",\"type\":\"uint136\"},{\"internalType\":\"uint40\",\"name\":\"q\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"z\",\"type\":\"uint40\"},{\"internalType\":\"uint24\",\"name\":\"e\",\"type\":\"uint24\"},{\"internalType\":\"uint8\",\"name\":\"u\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"N\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"O\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"b\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"M\",\"type\":\"uint256\"}],\"internalType\":\"struct xd.P\",\"name\":\"o\",\"type\":\"tuple\"}],\"name\":\"AaANwg8\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"h\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"r\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"j\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"p\",\"type\":\"address\"},{\"internalType\":\"uint136\",\"name\":\"n\",\"type\":\"uint136\"},{\"internalType\":\"uint40\",\"name\":\"q\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"z\",\"type\":\"uint40\"},{\"internalType\":\"uint24\",\"name\":\"e\",\"type\":\"uint24\"},{\"internalType\":\"uint8\",\"name\":\"u\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"N\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"O\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"b\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"M\",\"type\":\"uint256\"}],\"internalType\":\"struct xd.H[]\",\"name\":\"o\",\"type\":\"tuple[]\"}],\"name\":\"BTiIUQ\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"xd","CompilerVersion":"v0.8.10+commit.fc410830","OptimizationUsed":"1","Runs":"20000","ConstructorArguments":"0000000000000000000000007be8076f4ea4a4ad08075c2508e481d6c946d12b","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://047cbb57f6a47cef6c1f75a7e527db1632be3317a329b70cfc65967c4f61d476"}]