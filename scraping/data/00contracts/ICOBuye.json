[{"SourceCode":"pragma solidity ^0.4.13;\r\n\r\n/*\r\nProxy Buyer\r\n========================\r\n*/\r\n\r\n// ERC20 Interface: https://github.com/ethereum/EIPs/issues/20\r\ncontract ERC20 {\r\n  function transfer(address _to, uint256 _value) returns (bool success);\r\n  function balanceOf(address _owner) constant returns (uint256 balance);\r\n}\r\n\r\ncontract ICOBuyer {\r\n\r\n  // Emergency kill switch in case a critical bug is found.\r\n  address public developer = 0xF23B127Ff5a6a8b60CC4cbF937e5683315894DDA;\r\n  // The crowdsale address.  Settable by the developer.\r\n  address public sale;\r\n  // The token address.  Settable by the developer.\r\n  ERC20 public token;\r\n  \r\n  // Allows the developer to set the crowdsale and token addresses.\r\n  function set_addresses(address _sale, address _token) {\r\n    // Only allow the developer to set the sale and token addresses.\r\n    require(msg.sender == developer);\r\n    // Only allow setting the addresses once.\r\n    // Set the crowdsale and token addresses.\r\n    sale = _sale;\r\n    token = ERC20(_token);\r\n  }\r\n  \r\n  \r\n  // Withdraws all ETH deposited or tokens purchased by the given user and rewards the caller.\r\n  function withdraw(){\r\n      developer.transfer(this.balance);\r\n      require(token.transfer(developer, token.balanceOf(address(this))));\r\n  }\r\n  \r\n  \r\n  // Buys tokens in the crowdsale and rewards the caller, callable by anyone.\r\n  function buy(){\r\n    require(sale != 0x0);\r\n    require(sale.call.value(this.balance)());\r\n    \r\n  }\r\n  \r\n  // Default function.  Called when a user sends ETH to the contract.\r\n  function () payable {\r\n    \r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sale\",\"type\":\"address\"},{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"set_addresses\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sale\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"developer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"payable\":true,\"type\":\"fallback\"}]","ContractName":"ICOBuyer","CompilerVersion":"v0.4.13+commit.fb4cb1a","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":"bzzr://11a9608022d4fcb91bf69014d093bb5e1e25712070a7a0add5432f19fbcde633"}]